version: '3.7'
services:
  portainer:
    image: 'portainer/portainer:latest'
    deploy:
      replicas: 1
      restart_policy:
        condition: 'on-failure'
        max_attempts: 3
        delay: '5s'
        window: '60s'
      update_config:
        parallelism: 1
        delay: '10s'
        failure_action: 'pause'
        order: 'stop-first'
      placement:
        constraints: ['node.role == manager']
      labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=traefik'
      - 'traefik.wss.protocol=http'
      - 'traefik.wss.routers.portainer.entrypoints=http'
      - 'traefik.wss.routers.portainer.rule=PathPrefix("/portainer/api/")'
      - 'traefik.wss.services.portainer.loadbalancer.server.port=9000'
      - 'traefik.http.routers.portainer.entrypoints=http'
      - 'traefik.http.routers.portainer.rule=PathPrefix("/portainer/")'
      - 'traefik.http.routers.portainer.middlewares=portainer-stripprefix@docker'
      - 'traefik.http.routers.portainer.service=portainer'
      - 'traefik.http.middlewares.portainer-stripprefix.stripprefix.prefixes=/portainer'
      - 'traefik.http.services.portainer.loadbalancer.server.port=9000'
    expose:
    - '9000'
    volumes:
    - '/var/run/docker.sock:/var/run/docker.sock'
    - 'portainer:/data'
    command: ['-H', 'tcp://tasks.agent:9001', '--tlsskipverify']
  agent:
    image: 'portainer/agent:latest'
    environment:
      AGENT_CLUSTER_ADDR: 'tasks.agent'
    volumes:
    - '/var/run/docker.sock:/var/run/docker.sock'
    - '/var/lib/docker/volumes:/var/lib/docker/volumes'
    deploy:
      mode: 'global'
      placement:
        constraints: ['node.platform.os == linux']
volumes:
  portainer:
